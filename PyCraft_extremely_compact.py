import pygame, math
keys, init, surface, blocks, camdata, mvd, rot_speed, move_speed, sind, cosd = ({119: False, 115: False, 273: False, 274: False, 275: False, 276: False}, pygame.init(), pygame.display.set_mode((512, 512)), [[[[None, [255]*3][y == 30] for z in range(128)] for y in range(64)] for x in range(128)], [[64, 32, 64], [0, 0, 0]], 10, 1, 0.1, lambda a: math.sin(a*math.pi/180), lambda a: math.cos(a*math.pi/180))
while True: keys, camdata, a, b, c, d = (pygame.key.get_pressed(), [[camdata[0][0]+sind(camdata[1][1])*(keys[pygame.K_w]-keys[pygame.K_s])*move_speed, camdata[0][1], camdata[0][2]+cosd(camdata[1][1])*(keys[pygame.K_w]-keys[pygame.K_s])*move_speed], [camdata[1][0]+(keys[pygame.K_UP]-keys[pygame.K_DOWN])*rot_speed, camdata[1][1]+(keys[pygame.K_RIGHT]-keys[pygame.K_LEFT])*rot_speed]], surface.fill((0, 0, 0)), [[[[(pygame.draw.polygon(surface, b[1], [b[0][0], b[0][6], b[0][7], b[0][1]], 1), pygame.draw.polygon(surface, b[1], [b[0][1], b[0][7], b[0][5], b[0][3]], 1), pygame.draw.polygon(surface, b[1], [b[0][3], b[0][5], b[0][4], b[0][2]], 1), pygame.draw.polygon(surface, b[1], [b[0][2], b[0][4], b[0][6], b[0][0]], 1)) for b in bz if len(b[0]) == 8] for bz in by] for by in bx] for bx in [[[[([(int(256*(lp[0]/lp[2]+1)), int(256*(-lp[1]/lp[2]+1))) for lp in [(cosd(camdata[1][1])*(bp[0]-camdata[0][0]-0.5+c%2)-sind(camdata[1][1])*(bp[2]-camdata[0][2]+(c>1 and c<6)), cosd(camdata[1][0])*(bp[1]-camdata[0][1]-0.5+(c>3))-sind(camdata[1][0])*(cosd(camdata[1][1])*(bp[2]-camdata[0][2]+(c>1 and c<6))+sind(camdata[1][1])*(bp[0]-camdata[0][0]-0.5+c%2)), cosd(camdata[1][0])*(cosd(camdata[1][1])*(bp[2]-camdata[0][2]+(c>1 and c<6))+sind(camdata[1][1])*(bp[0]-camdata[0][0]-0.5+c%2))+sind(camdata[1][0])*(bp[1]-camdata[0][1]-0.5+(c>3))) for c in range(8)] if lp[2] > 0 and abs(lp[0]/lp[2]) < 1 and abs(lp[1]/lp[2]) < 1], blocks[bp[0]][bp[1]][bp[2]]) for bp in [(int(camdata[0][0]-dx+2*dx*(i%2)), int(camdata[0][1]-dy+2*dy*(i>3)), int(camdata[0][2]-dz+2*dz*(i>1 and i<6))) for i in range(8)] if blocks[bp[0]][bp[1]][bp[2]] != None] for dz in reversed(range(mvd))] for dy in reversed(range(mvd))] for dx in reversed(range(mvd))]], pygame.display.flip(), pygame.event.pump())
